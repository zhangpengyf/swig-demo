/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#import "truman_types.h"

#ifdef __cplusplus
extern "C" {
#endif

@interface SWIGTYPE_std__string : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

@end

@interface EngineConfig : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(void)setVideo_port: (int)value;
-(int)getVideo_port;
-(void)setAudio_port: (int)value;
-(int)getAudio_port;
-(id)init;

-(void)dealloc;

@end

@interface EngineStatus : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(void)setRtt: (int)value;
-(int)getRtt;
-(void)setIsRunning: (BOOL)value;
-(BOOL)getIsRunning;
-(void)setStatus: (SWIGTYPE_std__string*)value;
-(SWIGTYPE_std__string*)getStatus;
-(id)init;

-(void)dealloc;

@end

@interface EngineCallback : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(void)OnHelloWorld: (SWIGTYPE_std__string*)arg1;
-(void)OnEngineStatus: (EngineStatus*)status;

-(void)dealloc;

@end

@interface Engine : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(int)InitEngine: (EngineConfig*)config;
-(void)SetEngineCallback: (EngineCallback*)callback;
-(int)Run;
-(id)init;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

